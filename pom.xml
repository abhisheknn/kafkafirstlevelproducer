<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.micro</groupId>
	<artifactId>kafkafirstlevelproducer</artifactId>
	<version>0.0.1</version>
	<packaging>jar</packaging>
	<name>kafkafirstlevelproducer</name>


  <parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
    <version>2.2.13.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>


  <properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<docker.image.prefix>abhisheknn</docker.image.prefix>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <docker.image.prefix>abhisheknn</docker.image.prefix>
    <spring-cloud.version>Finchley.RELEASE</spring-cloud.version>
	</properties>

	<dependencies>
    <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
      <version> 2.0.5.RELEASE</version>
		</dependency>
<!--		<dependency>-->
<!--			<groupId>org.apache.kafka</groupId>-->
<!--			<artifactId>kafka-clients</artifactId>-->
<!--			<version>2.0.0</version>-->
<!--		</dependency>-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
      <version>2.0.5.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
      <version>2.0.5.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
		</dependency>
		 <!-- Redis Lettuce dependency -->
    <dependency>
	    <groupId>org.apache.commons</groupId>
	    <artifactId>commons-pool2</artifactId>
	    <version>2.4.3</version>
	</dependency>

    <dependency>
	  <groupId>biz.paluch.redis</groupId>
	  <artifactId>lettuce</artifactId>
	  <version>4.4.0.Final</version>
	</dependency>

	<dependency>
		<groupId>com.micro</groupId>
  		<artifactId>commonlib</artifactId>
  		<version>0.1</version>
	</dependency>

    <dependency>
      <groupId>com.micro.auth</groupId>
      <artifactId>token-manager-common</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>


    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-eureka</artifactId>
      <version>1.4.7.RELEASE</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.springframework.kafka/spring-kafka -->
    <dependency>
      <groupId>org.springframework.kafka</groupId>
      <artifactId>spring-kafka</artifactId>
    </dependency>


  </dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
            <groupId>com.spotify</groupId>
            <artifactId>dockerfile-maven-plugin</artifactId>
            <version>1.3.6</version>
            <configuration>
            <useConfigFile>false</useConfigFile>
            <useMavenSettingsForAuth>true</useMavenSettingsForAuth>
                <repository>${docker.image.prefix}/${project.artifactId}</repository>
            <buildArgs>
		<JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
			</buildArgs>
            </configuration>
	<executions>
	<execution>
		<id>default</id>
		<phase>install</phase>
		<goals>
			<goal>build</goal>
		</goals>
	</execution>
	</executions>
        </plugin>
		</plugins>
	</build>
</project>
